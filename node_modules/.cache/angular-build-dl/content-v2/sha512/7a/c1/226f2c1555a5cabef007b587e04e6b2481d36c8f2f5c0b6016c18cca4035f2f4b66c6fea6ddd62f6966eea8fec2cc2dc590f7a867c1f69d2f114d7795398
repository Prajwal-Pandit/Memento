{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/images/image-list/image-list.component.ts","./src/app/images/image-list/image-list.component.html","./src/app/images/image/image.component.ts","./src/app/images/image/image.component.html","./src/app/images/images.component.ts","./src/app/images/images.component.html","./src/app/shared/image.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\nimport { flush } from '@angular/core/testing';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'image/upload', pathMatch: 'full' },\n  {\n    path: 'image', component: ImagesComponent, children: [\n      { path: 'upload', component: ImageComponent }, //Image Upload\n      { path: 'list', component: ImageListComponent } //Image List\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Enshrine';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire'\nimport { AngularFireStorageModule } from '@angular/fire/storage'\nimport { AngularFireDatabaseModule } from '@angular/fire/database'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\nimport { environment } from '../environments/environment'\nimport { ReactiveFormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImagesComponent,\n    ImageComponent,\n    ImageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireStorageModule,\n    AngularFireDatabaseModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.scss']\n})\nexport class ImageListComponent implements OnInit {\n\n  imageList: any[];\n  rowIndexArray: any[];\n\n  constructor(private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.service.imageDetailList.snapshotChanges().subscribe(\n      list => {\n        this.imageList = list.map(item => { return item.payload.val(); });\n        this.rowIndexArray = Array.from(Array(Math.ceil(this.imageList.length + 1)).keys());\n      }\n    );\n  }\n\n}\n","<div class=\"imagebox text-center\" *ngIf=\"!imageList\">\n    <a routerLink=\"/image/upload\">\n        <img src=\"/assets/img/insert.jpg\" class=\"img-fluid\">\n        <span class=\"imagebox-desc\">Insert New Image</span>\n    </a>\n</div>  \n\n<div class=\"container\" *ngIf=\"imageList\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"imagebox text-center\">\n                <a routerLink=\"/image/upload\">\n                    <img src=\"/assets/img/insert.jpg\" class=\"img mx-auto img-fluid rounded\">\n                    <span class=\"imagebox-desc\">Insert New Image</span>\n                </a>\n            </div> \n        </div>\n        <div class=\"col-md-4\" *ngFor=\"let i of rowIndexArray\">          \n            <div class=\"imagebox\" *ngIf=\"imageList[i]\">\n                <a class=\"portfolio-box\" [href]=\"imageList[i].imageUrl\">\n                    <img [src]=\"imageList[i].imageUrl\" class=\"img-fluid img rounded mb-3 mx-auto\">\n                    <span class=\"imagebox-desc\">{{imageList[i].caption}}</span>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators'\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n\n  imgSrc: String;\n  selectedImg: any = null;\n  isUploaded: boolean;\n\n  formTemplate = new FormGroup({\n    caption: new FormControl('', Validators.required),\n    imageUrl: new FormControl('', Validators.required)\n  })\n  constructor(private storage: AngularFireStorage, private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n\n  show(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => this.imgSrc = e.target.result;\n      reader.readAsDataURL(event.target.files[0]);\n      this.selectedImg = event.target.files[0];\n    }\n    else {\n      this.imgSrc = \"/assets/img/image_placeholder.jpg\";\n      this.selectedImg = null;\n    }\n  }\n\n  onUpload(formValue) {\n    this.isUploaded = true;\n    if (this.formTemplate.valid) {\n      var filePath = `images/${this.selectedImg.name.split('.').slice(0, -1).join('.')}_${new Date().getTime()}`;\n      const fileRef = this.storage.ref(filePath);\n      this.storage.upload(filePath, this.selectedImg).snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe((url) => {\n            formValue['imageUrl'] = url;\n            this.service.imageDetails(formValue);\n            this.resetForm();\n          })\n        })\n      ).subscribe();\n    }\n  }\n\n  get formControls() {\n    return this.formTemplate['controls'];\n  }\n\n  resetForm() {\n    this.formTemplate.reset();\n    this.formTemplate.setValue({\n      caption: '',\n      imageUrl: ''\n    });\n    this.selectedImg = null;\n    this.imgSrc = \"/assets/img/image_placeholder.jpg\";\n    this.isUploaded = false;\n  }\n}\n","<div class=\"container d-none d-sm-block d-sm-none d-md-block\">\n    <div class=\"card\" style=\"width:25rem\">\n        <div class=\"card-body\">\n            <form [formGroup]=\"formTemplate\" (submit)=\"onUpload(formTemplate.value)\">\n                <div class=\"text-center\">\n                    <img [src]=\"imgSrc\" class=\"img img-center img-fluid\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Select file to upload</label>\n                    <input type=\"file\" accept=\"image/*\" class=\"form-control btn\" #fileUploader formControlName=\"imageUrl\"\n                    (change)=\"show($event)\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.imageUrl.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.caption.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                    <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Gallery</a>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                    <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--Mobile devices-->\n<div class=\"container d-block d-sm-none d-none d-sm-block d-md-none\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form [formGroup]=\"formTemplate\" (submit)=\"onUpload(formTemplate.value)\">\n                <div class=\"text-center\">\n                    <img [src]=\"imgSrc\" class=\"img img-center img-fluid\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Select file to upload</label>\n                    <input type=\"file\" accept=\"image/*\" class=\"form-control btn\" #fileUploader formControlName=\"imageUrl\"\n                    (change)=\"show($event)\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.imageUrl.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.caption.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                    <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Gallery</a>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                    <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.scss']\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.service.getImageDetailList();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <blockquote class=\"blockquote\">\n                <p class=\"mb-0 h3 display-4 text-primary\">Memento</p>\n                <footer class=\"blockquote-footer\">Your <cite title=\"Source Title\">Gallery</cite></footer>\n            </blockquote>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  imageDetailList: AngularFireList<any>;\n\n  constructor(private database: AngularFireDatabase) { }\n\n  getImageDetailList() {\n    this.imageDetailList = this.database.list('Details');\n  }\n\n  imageDetails(Details) {\n    this.imageDetailList.push(Details);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyAG_UfCCq_Tbre-zt1rB3SIagfJyDTnx2w\",\n    authDomain: \"angular-memento-568b7.firebaseapp.com\",\n    databaseURL: \"https://angular-memento-568b7.firebaseio.com\",\n    projectId: \"angular-memento-568b7\",\n    storageBucket: \"angular-memento-568b7.appspot.com\",\n    messagingSenderId: \"606446309515\",\n    appId: \"1:606446309515:web:93a205e578926c0496848e\",\n    measurementId: \"G-VK4S4S56LF\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}