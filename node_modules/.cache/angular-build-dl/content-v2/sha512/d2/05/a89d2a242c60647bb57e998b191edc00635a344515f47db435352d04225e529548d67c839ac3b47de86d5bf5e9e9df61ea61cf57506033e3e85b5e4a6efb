{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/images/image-list/image-list.component.ts","webpack:///src/app/images/image-list/image-list.component.html","webpack:///src/app/images/image/image.component.ts","webpack:///src/app/images/image/image.component.html","webpack:///src/app/images/images.component.ts","webpack:///src/app/images/images.component.html","webpack:///src/app/shared/image.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","ImageListComponent","service","imageDetailList","snapshotChanges","subscribe","list","imageList","map","item","payload","val","rowIndexArray","Array","from","Math","ceil","length","ImageComponent","storage","selectedImg","formTemplate","caption","required","imageUrl","resetForm","event","target","files","reader","FileReader","onload","imgSrc","result","readAsDataURL","formValue","isUploaded","valid","filePath","name","split","slice","join","Date","getTime","fileRef","ref","upload","pipe","getDownloadURL","url","imageDetails","reset","setValue","onUpload","show","ImagesComponent","getImageDetailList","ImageService","database","Details","push","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\nimport { flush } from '@angular/core/testing';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'image/upload', pathMatch: 'full' },\n  {\n    path: 'image', component: ImagesComponent, children: [\n      { path: 'upload', component: ImageComponent }, //Image Upload\n      { path: 'list', component: ImageListComponent } //Image List\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Enshrine';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire'\nimport { AngularFireStorageModule } from '@angular/fire/storage'\nimport { AngularFireDatabaseModule } from '@angular/fire/database'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\nimport { environment } from '../environments/environment'\nimport { ReactiveFormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImagesComponent,\n    ImageComponent,\n    ImageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireStorageModule,\n    AngularFireDatabaseModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.scss']\n})\nexport class ImageListComponent implements OnInit {\n\n  imageList: any[];\n  rowIndexArray: any[];\n\n  constructor(private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.service.imageDetailList.snapshotChanges().subscribe(\n      list => {\n        this.imageList = list.map(item => { return item.payload.val(); });\n        this.rowIndexArray = Array.from(Array(Math.ceil(this.imageList.length + 1)).keys());\n      }\n    );\n  }\n\n}\n","<div class=\"imagebox text-center\" *ngIf=\"!imageList\">\n    <a routerLink=\"/image/upload\">\n        <img src=\"/assets/img/insert.jpg\" class=\"img-fluid\">\n        <span class=\"imagebox-desc\">Insert New Image</span>\n    </a>\n</div>  \n\n<div class=\"container\" *ngIf=\"imageList\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"imagebox text-center\">\n                <a routerLink=\"/image/upload\">\n                    <img src=\"/assets/img/insert.jpg\" class=\"img mx-auto img-fluid rounded\">\n                    <span class=\"imagebox-desc\">Insert New Image</span>\n                </a>\n            </div> \n        </div>\n        <div class=\"col-md-4\" *ngFor=\"let i of rowIndexArray\">          \n            <div class=\"imagebox\" *ngIf=\"imageList[i]\">\n                <a class=\"portfolio-box\" [href]=\"imageList[i].imageUrl\">\n                    <img [src]=\"imageList[i].imageUrl\" class=\"img-fluid img rounded mb-3 mx-auto\">\n                    <span class=\"imagebox-desc\">{{imageList[i].caption}}</span>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators'\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n\n  imgSrc: String;\n  selectedImg: any = null;\n  isUploaded: boolean;\n\n  formTemplate = new FormGroup({\n    caption: new FormControl('', Validators.required),\n    imageUrl: new FormControl('', Validators.required)\n  })\n  constructor(private storage: AngularFireStorage, private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n\n  show(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => this.imgSrc = e.target.result;\n      reader.readAsDataURL(event.target.files[0]);\n      this.selectedImg = event.target.files[0];\n    }\n    else {\n      this.imgSrc = \"/assets/img/image_placeholder.jpg\";\n      this.selectedImg = null;\n    }\n  }\n\n  onUpload(formValue) {\n    this.isUploaded = true;\n    if (this.formTemplate.valid) {\n      var filePath = `images/${this.selectedImg.name.split('.').slice(0, -1).join('.')}_${new Date().getTime()}`;\n      const fileRef = this.storage.ref(filePath);\n      this.storage.upload(filePath, this.selectedImg).snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe((url) => {\n            formValue['imageUrl'] = url;\n            this.service.imageDetails(formValue);\n            this.resetForm();\n          })\n        })\n      ).subscribe();\n    }\n  }\n\n  get formControls() {\n    return this.formTemplate['controls'];\n  }\n\n  resetForm() {\n    this.formTemplate.reset();\n    this.formTemplate.setValue({\n      caption: '',\n      imageUrl: ''\n    });\n    this.selectedImg = null;\n    this.imgSrc = \"/assets/img/image_placeholder.jpg\";\n    this.isUploaded = false;\n  }\n}\n","<div class=\"container d-none d-sm-block d-sm-none d-md-block\">\n    <div class=\"card\" style=\"width:25rem\">\n        <div class=\"card-body\">\n            <form [formGroup]=\"formTemplate\" (submit)=\"onUpload(formTemplate.value)\">\n                <div class=\"text-center\">\n                    <img [src]=\"imgSrc\" class=\"img img-center img-fluid\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Select file to upload</label>\n                    <input type=\"file\" accept=\"image/*\" class=\"form-control btn\" #fileUploader formControlName=\"imageUrl\"\n                    (change)=\"show($event)\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.imageUrl.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.caption.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                    <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Gallery</a>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                    <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--Mobile devices-->\n<div class=\"container d-block d-sm-none d-none d-sm-block d-md-none\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form [formGroup]=\"formTemplate\" (submit)=\"onUpload(formTemplate.value)\">\n                <div class=\"text-center\">\n                    <img [src]=\"imgSrc\" class=\"img img-center img-fluid\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Select file to upload</label>\n                    <input type=\"file\" accept=\"image/*\" class=\"form-control btn\" #fileUploader formControlName=\"imageUrl\"\n                    (change)=\"show($event)\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.imageUrl.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n                    <div class=\"text-danger\" *ngIf=\"isUploaded && formControls.caption.errors?.required\">This field is required.\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                    <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Gallery</a>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                    <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.scss']\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private service: ImageService) { }\n\n  ngOnInit(): void {\n    this.service.getImageDetailList();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <blockquote class=\"blockquote\">\n                <p class=\"mb-0 h3 display-4 text-primary\">Memento</p>\n                <footer class=\"blockquote-footer\">Your <cite title=\"Source Title\">Gallery</cite></footer>\n            </blockquote>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  imageDetailList: AngularFireList<any>;\n\n  constructor(private database: AngularFireDatabase) { }\n\n  getImageDetailList() {\n    this.imageDetailList = this.database.list('Details');\n  }\n\n  imageDetails(Details) {\n    this.imageDetailList.push(Details);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyAG_UfCCq_Tbre-zt1rB3SIagfJyDTnx2w\",\n    authDomain: \"angular-memento-568b7.firebaseapp.com\",\n    databaseURL: \"https://angular-memento-568b7.firebaseio.com\",\n    projectId: \"angular-memento-568b7\",\n    storageBucket: \"angular-memento-568b7.appspot.com\",\n    messagingSenderId: \"606446309515\",\n    appId: \"1:606446309515:web:93a205e578926c0496848e\",\n    measurementId: \"G-VK4S4S56LF\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}